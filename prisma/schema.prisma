generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum UserStatus {
  INACTIVE
  ACTIVE
  BANNED
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id          String      @id @default(uuid())
  firebaseUid String      @unique
  email       String
  role        UserRole    @default(USER)
  status      UserStatus  @default(ACTIVE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  eventUser   EventUser[]
  profileId   String?     @unique
  profile     Profile?    @relation(fields: [profileId], references: [id])
}

model Profile {
  id          String   @id @default(uuid())
  firstName   String?
  lastName    String?
  displayName String?
  picture     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User?
}

model Event {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  eventUser EventUser[]
}

enum EventRole {
  ADMIN
  STAFF
  PARTICIPANT
}

model EventUser {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventId     String
  event       Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  displayName String?
  tagLine     String?
  roles       EventRole @default(PARTICIPANT)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([eventId, userId])
}
